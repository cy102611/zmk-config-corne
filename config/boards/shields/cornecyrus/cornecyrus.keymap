#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        delete-left {
            bindings = <&kp DEL>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T              &kp Y    &kp U   &kp I           &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G              &kp H    &kp J   &kp K           &kp L    &kp SEMI
&kp Z  &kp X  &kp C  &kp V  &kp B              &kp N    &kp M   &kp COMMA       &kp DOT  &kp FSLH
            &lt 5 ESCAPE  &lt 3 TAB  &lt 1 BACKSPACE    &lt 2 SPACE  &lt 4 ENTER  &lt 5 CAPSLOCK
            >;
        };

        layer_1 {
            bindings = <
&none         &none      &none             &none     &none    &kp FSLH  &kp N7  &kp N8    &kp N9  &kp MINUS
&kp LEFT_WIN  &kp LSHFT  &kp LEFT_CONTROL  &kp LALT  &none    &kp STAR  &kp N4  &kp N5    &kp N6  &kp PLUS
&none         &none      &none             &none     &none    &kp DOT   &kp N1  &kp N2    &kp N3  &kp EQUAL
                        &lt 5 ESCAPE        &lt 3 TAB       &lt 1 BACKSPACE    &lt 2 SPACE  &lt 4 ENTER   &lt 5 N0
            >;
        };

        layer_2 {
            bindings = <
&kp EXCLAMATION                 &kp AT_SIGN                 &kp HASH                                &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp GRAVE  &kp TILDE
&mt RIGHT_BRACKET LEFT_BRACKET  &mt RIGHT_BRACE LEFT_BRACE  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &none       &none          &none      &kp UNDERSCORE  &none         &none      &none
&kp SLASH                       &kp PIPE                    &kp BACKSLASH                           &none       &none          &none      &none           &none         &none      &none
                                                                   &lt 5 ESCAPE        &lt 3 TAB       &lt 1 BACKSPACE    &lt 2 SPACE  &lt 4 ENTER      &lt 5 CAPSLOCK
            >;
        };

        layer_3 {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &none  &none           &kp UP_ARROW    &none            &none
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&kp F11  &kp F12  &none   &none   &none      &none  &none           &none           &none            &none
                         &lt 5 ESCAPE        &lt 3 TAB       &lt 1 BACKSPACE    &lt 2 SPACE  &lt 4 ENTER      &lt 5 CAPSLOCK
            >;
        };

        layer_4 {
            bindings = <
&ext_power EP_OFF  &ext_power EP_ON  &out OUT_BLE   &out OUT_USB   &none            &none  &none           &kp C_VOLUME_UP           &none       &none
&bt BT_CLR         &bt BT_SEL 0      &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3     &none  &kp C_PREVIOUS  &kp C_PLAY_PAUSE          &kp C_NEXT  &none
&none              &bt BT_DISC 0     &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3    &none  &none           &mt C_MUTE C_VOLUME_DOWN  &none       &none
                                            &lt 5 ESCAPE        &lt 3 TAB       &lt 1 BACKSPACE    &lt 2 SPACE  &lt 4 ENTER      &lt 5 CAPSLOCK
            >;
        };

        layer_5 {
            bindings = <
&kp Q           &kp W             &kp E               &kp R           &kp T              &kp Y        &kp U            &kp I                &kp O              &kp P                    
&mt LEFT_WIN A  &mt LEFT_SHIFT S  &mt LEFT_CONTROL D  &mt LEFT_ALT F  &kp G              &kp H        &mt RIGHT_ALT J  &mt RIGHT_CONTROL K  &mt RIGHT_SHIFT L  &mt RIGHT_WIN SEMICOLON 
&kp Z           &kp X             &kp C               &kp V           &kp B              &kp N        &kp M            &kp COMMA            &kp DOT            &kp FSLH                 
                                         &lt 5 ESCAPE        &lt 3 TAB       &lt 1 BACKSPACE    &lt 2 SPACE  &lt 4 ENTER      &lt 5 CAPSLOCK
            >;
        };
    };
};
